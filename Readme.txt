/* ===================================
　　　　　　　InputPipePlugin　　　　　　　　　　　　
 ==================================== */
 
■はじめに
このソフトは、L-SMASH_Works File Reader(lwinput.aui)を別プロセスで実行してあげることによって
aviutlのメモリ使用量削減を目論む、aviutlの入力プラグインです

■導入方法
lwinput.aui が置いてあるフォルダ(aviutl.exeがあるフォルダ、もしくは "aviutl.exeがあるフォルダ\plugins\"に存在するはず)に、
InputPipePlugin.aui と InputPipeMain.exe をコピーするだけです

その後、aviutlのメインメニューから、[ファイル]->[環境設定]->[入力プラグイン優先度の設定]を選択し、
"InputPipePlugin"を"L-SMASH Works File Reader"より上にドラッグして移動してあげれば完了です

■導入の確認
拡張編集のウィンドウに適当に動画ファイルを放り込んで、"InputPipeMain.exe"のプロセスが立ち上がっていれば成功です

■設定
[ファイル]->[環境設定]->[入力プラグインの設定]->[InputPipePluginの設定]で
プラグインの設定ができます

〇ハンドルキャッシュを有効
動画では説明しませんでしたが、編集で同じ動画ファイルのカットを多用するなどの場合、
拡張編集プラグインが同じ動画に対して毎回ファイルオープンのリクエストを送ってくるので、
いちいちL-SMASH Worksプラグインへ ファイルオープンのリクエストを送らずに、
一度開いたファイルのハンドルを使いまわすようにする設定です

ぶっちゃけ外部プロセスなんて使わずに、これにチェック入れるだけでいいんじゃないかなって
実装した後に気づきました
でも、無駄にはなってないはずです…

〇プロセス間通信を有効にする
デフォルトではオンになってます
外部プロセスを立ち上げて、その中でlwinput.auiを実行するようにします

外部プロセスとの通信はコストがかかるので、重いと感じたらチェック外してください


■免責
作者(原著者＆改変者)は、このソフトによって生じた如何なる損害にも、
修正や更新も、責任を負わないこととします。
使用にあたっては、自己責任でお願いします。
 
何かあれば下記のURLにあるメールフォームにお願いします。
https://ws.formzu.net/fgen/S37403840/
 
■著作権表示
Copyright (C) 2018 amate

私が書いた部分のソースコードは、MIT License とします。

■謝辞
aviutlの作者様、L-SMASH Worksの作者様
あなた方の活躍のおかげで、素晴らしい動画がたくさん生まれていることに感謝いたします
ありがとう！

 
■ビルドについて
Visual Studio 2019 が必要です
ビルドには boost(1.70~)とWTL(10_9163) が必要なのでそれぞれ用意してください。

Boost::Logを使用しているので、事前にライブラリのビルドが必要になります

Boostライブラリのビルド方法
https://boostjp.github.io/howtobuild.html
//コマンドライン
b2.exe install -j 16 --prefix=lib toolset=msvc-14.2  runtime-link=static --with-log

◆boost
http://www.boost.org/

◆WTL
http://sourceforge.net/projects/wtl/


■更新履歴
v1.1
・[fix] IPC有効時、外部プロセスとの通信にコケるのを修正(マルチスレッドで各種関数が実行されることがあるようなので、排他制御を入れた)
・[change] 名前付きパイプの設定を、バイトストリームモードへ変更(上のバグのせいで変なことしてた)
・[fix] 外部プロセスにて、func_info_getが失敗することを考慮に入れてなかったのを修正
・[change] 名前付きパイプの名前をランダムに変更するようにした

v1.0
・完成
